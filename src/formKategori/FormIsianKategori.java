/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formKategori;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author labib
 */
public class FormIsianKategori extends javax.swing.JFrame {
    
//    DefaultComboBoxModel<String> cModel = new DefaultComboBoxModel<>();
//    String pilihan = null;
    
    ViewMasterKategori viewMasterKategori;
    
    /**
     * Creates new form FormIsianKategori
     */
    private String taskFormIsian = "CREATE";
    private int idUpdateFormIsian = 0;
    
    public FormIsianKategori(ViewMasterKategori viewMasterKategori) {
        initComponents();
        ImageIcon icon = new ImageIcon("src/_asset/78.png");
        setIconImage(icon.getImage());
        this.viewMasterKategori = viewMasterKategori;
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
    public void refreshFormIsian(){
        this.taskFormIsian = "CREATE";
        this.idUpdateFormIsian = 0;
        kodeField.setText("");
        namaField.setText("");
        statusCb.setSelectedItem("Aktif");
    }
    
    public void setDataUpdateFormIsian(String kategoriId, String kategoriKode, String kategoriNama, String kategoriStatus){
        this.taskFormIsian = "UPDATE";
        this.idUpdateFormIsian = Integer.parseInt(kategoriId);
        kodeField.setText(kategoriKode);
        namaField.setText(kategoriNama);
        statusCb.setSelectedItem(kategoriStatus);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFormIsianKategori = new javax.swing.JPanel();
        kodeLabel = new javax.swing.JLabel();
        kodeField = new javax.swing.JTextField();
        namaLabel = new javax.swing.JLabel();
        namaField = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();
        statusCb = new javax.swing.JComboBox<>();
        simpanButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelFormIsianKategori.setBackground(new java.awt.Color(15, 60, 89));

        kodeLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        kodeLabel.setForeground(new java.awt.Color(255, 255, 255));
        kodeLabel.setText("Kode");

        kodeField.setBackground(new java.awt.Color(51, 51, 51));
        kodeField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        kodeField.setForeground(new java.awt.Color(255, 255, 255));

        namaLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        namaLabel.setForeground(new java.awt.Color(255, 255, 255));
        namaLabel.setText("Nama");

        namaField.setBackground(new java.awt.Color(51, 51, 51));
        namaField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        namaField.setForeground(new java.awt.Color(255, 255, 255));

        statusLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusLabel.setText("Status");

        statusCb.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        statusCb.setForeground(new java.awt.Color(255, 255, 255));
        statusCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilihan Anda", "Aktif", "Tidak Aktif" }));

        simpanButton.setBackground(new java.awt.Color(0, 102, 51));
        simpanButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        simpanButton.setForeground(new java.awt.Color(255, 255, 255));
        simpanButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_asset/46_save.png"))); // NOI18N
        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(0, 153, 153));
        cancelButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_asset/01.png"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFormIsianKategoriLayout = new javax.swing.GroupLayout(panelFormIsianKategori);
        panelFormIsianKategori.setLayout(panelFormIsianKategoriLayout);
        panelFormIsianKategoriLayout.setHorizontalGroup(
            panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormIsianKategoriLayout.createSequentialGroup()
                .addGroup(panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFormIsianKategoriLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kodeLabel)
                            .addComponent(namaLabel)
                            .addComponent(statusLabel))
                        .addGap(41, 41, 41)
                        .addGroup(panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kodeField, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(namaField)
                            .addComponent(statusCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelFormIsianKategoriLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(simpanButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        panelFormIsianKategoriLayout.setVerticalGroup(
            panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormIsianKategoriLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kodeLabel)
                    .addComponent(kodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namaLabel)
                    .addComponent(namaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel)
                    .addComponent(statusCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(panelFormIsianKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpanButton)
                    .addComponent(cancelButton))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFormIsianKategori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFormIsianKategori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        if(taskFormIsian.equalsIgnoreCase("UPDATE")){
            updateKategori();
        }else{
            insertKategori();
        }
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
        
    private void insertKategori() {
        String kodeValues = kodeField.getText();
        String namaValues = namaField.getText();
        String statusValues = statusCb.getSelectedItem().toString();
        
        if(kodeValues.isEmpty() || namaValues.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lengkapi Data Terlebih Dahulu");
            return;
        }
        
        try {
            Connection con = (Connection) database.Koneksi.koneksiDB();
            String insert_sql = "call InsertKategori(?, ?, ?);";
            PreparedStatement ps = (PreparedStatement) con.prepareStatement(insert_sql);
            ps.setString(1, kodeValues);
            ps.setString(2, namaValues);
            ps.setString(3, statusValues);
            
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Kategori Berhasil Di Simpan"); 
            refreshKategori();
            this.setVisible(false);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Kategori Gagal Di Simpan");
            ex.printStackTrace();
        }
        
    }
    
    private void updateKategori() {
        String kodeValues = kodeField.getText();
        String namaValues = namaField.getText();
        String statusValues = statusCb.getSelectedItem().toString();
        
        if(kodeValues.isEmpty() || namaValues.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lengkapi Data Terlebih Dahulu");
            return;
        }

        try {
            Connection con = (Connection) database.Koneksi.koneksiDB();
            String update_sql = "call UpdateKategori(?, ?, ?, ?);";
            PreparedStatement ps = (PreparedStatement) con.prepareStatement(update_sql);
            ps.setString(1, kodeValues);
            ps.setString(2, namaValues);
            ps.setString(3, statusValues);
            ps.setInt(4, idUpdateFormIsian);
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Kategori Berhasil Di Update");
            refreshKategori();
            this.setVisible(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Kategori Gagal Di Update");
            ex.printStackTrace();
        }
        
    }
    
    private void refreshKategori() {
        if (viewMasterKategori != null) {
                viewMasterKategori.tampilDatakategoriList("");
            }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField kodeField;
    private javax.swing.JLabel kodeLabel;
    private javax.swing.JTextField namaField;
    private javax.swing.JLabel namaLabel;
    private javax.swing.JPanel panelFormIsianKategori;
    private javax.swing.JButton simpanButton;
    private javax.swing.JComboBox<String> statusCb;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables

    
}
