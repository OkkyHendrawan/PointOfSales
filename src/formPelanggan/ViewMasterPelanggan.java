/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package formPelanggan;

import java.awt.Component;
import javax.swing.*;
import javax.swing.table.*;
import database.Koneksi;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author HP
 */
public class ViewMasterPelanggan extends javax.swing.JInternalFrame {
    
    JasperReport JasRep;
    JasperPrint JasPri;
    Map param = new HashMap();
    JasperDesign JasDes;
    /**
     * Creates new form ViewMasterPelanggan
     */

    private FormIsianPelanggan isianPelanggan;
    private String taskFormIsianPelanggan = "CREATE";

    public ViewMasterPelanggan() {
        isianPelanggan = new FormIsianPelanggan ();
        initComponents();
        tampilDataList("");
    }

    public final void tampilDataList(String cariData) {
       DefaultTableModel listTablePelanggan = new DefaultTableModel();
        listTablePelanggan.addColumn("No");
        listTablePelanggan.addColumn("Nama Lengkap");
        listTablePelanggan.addColumn("Alamat");
        listTablePelanggan.addColumn("No Tlp");
        listTablePelanggan.addColumn("Jenis Kelamin");
        listTablePelanggan.addColumn("Status");
        try {
            java.sql.Connection conn = (java.sql.Connection) database.Koneksi.koneksiDB();
            String sql;
            
            if (!cariData.isEmpty()) {
                sql = "{CALL SearchPelanggan(?)}";
                
            } else {
                sql = "{CALL SearchPelanggan(?)}";
                       
            }

            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, cariData);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                listTablePelanggan.addRow(new Object[]{
                    rs.getString("pelanggan_id"),
                    rs.getString("pelanggan_nama"),
                    rs.getString("pelanggan_alamat"),
                    rs.getString("pelanggan_tlp"),
                    rs.getString("pelanggan_jenis_kelamin"),
                    rs.getString("pelanggan_status"),

                });
            }
            pelangganGridTable.setModel(new DefaultTableModel());
            pelangganGridTable.setModel(listTablePelanggan);

        } catch (SQLException e) {
            // Handle the exception
            // or log the exception
            
        } catch (Exception e) {
            // handle exceptions, at least log them

        }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPelanggan = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        pelangganPilihanField = new javax.swing.JComboBox<>();
        pelangganCariField = new javax.swing.JTextField();
        btnRefreshPelanggan = new javax.swing.JButton();
        btnTambahPelanggan = new javax.swing.JButton();
        btnUbahPelanggan = new javax.swing.JButton();
        btnCetakPelanggan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pelangganGridTable = new javax.swing.JTable();

        setClosable(true);
        setTitle("Master Pelanggan");
        setPreferredSize(new java.awt.Dimension(1033, 511));

        panelPelanggan.setBackground(new java.awt.Color(0, 102, 102));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cari");

        pelangganPilihanField.setBackground(new java.awt.Color(102, 102, 0));
        pelangganPilihanField.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        pelangganPilihanField.setForeground(new java.awt.Color(255, 255, 255));
        pelangganPilihanField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilihan Anda", "Nama", "Status", "Jenis Kelamin" }));
        pelangganPilihanField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pelangganPilihanFieldActionPerformed(evt);
            }
        });

        pelangganCariField.setBackground(new java.awt.Color(51, 51, 51));
        pelangganCariField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        pelangganCariField.setForeground(new java.awt.Color(255, 255, 255));
        pelangganCariField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pelangganCariFieldActionPerformed(evt);
            }
        });
        pelangganCariField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pelangganCariFieldKeyPressed(evt);
            }
        });

        btnRefreshPelanggan.setBackground(new java.awt.Color(0, 0, 102));
        btnRefreshPelanggan.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnRefreshPelanggan.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshPelanggan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_asset/22.png"))); // NOI18N
        btnRefreshPelanggan.setText("Refresh");
        btnRefreshPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshPelangganActionPerformed(evt);
            }
        });

        btnTambahPelanggan.setBackground(new java.awt.Color(0, 0, 102));
        btnTambahPelanggan.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnTambahPelanggan.setForeground(new java.awt.Color(255, 255, 255));
        btnTambahPelanggan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_asset/03.png"))); // NOI18N
        btnTambahPelanggan.setText("Tambah Pelanggan");
        btnTambahPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahPelangganActionPerformed(evt);
            }
        });

        btnUbahPelanggan.setBackground(new java.awt.Color(0, 0, 102));
        btnUbahPelanggan.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnUbahPelanggan.setForeground(new java.awt.Color(255, 255, 255));
        btnUbahPelanggan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_asset/19_edit.png"))); // NOI18N
        btnUbahPelanggan.setText("Ubah Pelanggan");
        btnUbahPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahPelangganActionPerformed(evt);
            }
        });

        btnCetakPelanggan.setBackground(new java.awt.Color(0, 0, 102));
        btnCetakPelanggan.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCetakPelanggan.setForeground(new java.awt.Color(255, 255, 255));
        btnCetakPelanggan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_asset/11_print.png"))); // NOI18N
        btnCetakPelanggan.setText("Cetak");
        btnCetakPelanggan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCetakPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakPelangganActionPerformed(evt);
            }
        });

        pelangganGridTable.setBackground(new java.awt.Color(51, 51, 51));
        pelangganGridTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        pelangganGridTable.setForeground(new java.awt.Color(255, 255, 255));
        pelangganGridTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(pelangganGridTable);

        javax.swing.GroupLayout panelPelangganLayout = new javax.swing.GroupLayout(panelPelanggan);
        panelPelanggan.setLayout(panelPelangganLayout);
        panelPelangganLayout.setHorizontalGroup(
            panelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPelangganLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pelangganPilihanField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pelangganCariField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRefreshPelanggan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTambahPelanggan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUbahPelanggan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCetakPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPelangganLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelPelangganLayout.setVerticalGroup(
            panelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPelangganLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pelangganPilihanField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTambahPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCetakPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUbahPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pelangganCariField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPelanggan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPelanggan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pelangganPilihanFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pelangganPilihanFieldActionPerformed

    }//GEN-LAST:event_pelangganPilihanFieldActionPerformed

    private void pelangganCariFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pelangganCariFieldActionPerformed

        }

        // Metode untuk mencari dan memfilter berdasarkan nama di dalam tabel
        private void cariDanFilterBerdasarkanNama(String nama) {
            DefaultTableModel model = (DefaultTableModel) pelangganGridTable.getModel();
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
            pelangganGridTable.setRowSorter(sorter);

            RowFilter<DefaultTableModel, Object> filter = RowFilter.regexFilter("(?i)" + nama, 0); // Mengabaikan huruf besar/kecil
            sorter.setRowFilter(filter);
        }

        // Metode untuk mencari dan memfilter berdasarkan status di dalam tabel
        private void cariDanFilterBerdasarkanStatus(String status) {
            DefaultTableModel model = (DefaultTableModel) pelangganGridTable.getModel();
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
            pelangganGridTable.setRowSorter(sorter);

            RowFilter<DefaultTableModel, Object> filter = RowFilter.regexFilter("(?i)" + status, 4); // Mengabaikan huruf besar/kecil
            sorter.setRowFilter(filter);
    }//GEN-LAST:event_pelangganCariFieldActionPerformed

    private void pelangganCariFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pelangganCariFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // This block will be executed when the Enter key is pressed
            String enteredText = pelangganCariField.getText();
            // Perform your desired action with the entered text
            // For example, you might want to process the entered SKU
            tampilDataList(enteredText);
        }
    }//GEN-LAST:event_pelangganCariFieldKeyPressed

    private void btnRefreshPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshPelangganActionPerformed
        // TODO add your handling code here:
        pelangganCariField.setText("");
        tampilDataList("");
    }//GEN-LAST:event_btnRefreshPelangganActionPerformed

    private void btnTambahPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahPelangganActionPerformed
        if( ! ( isianPelanggan.isVisible() ) ) { // Memeriksa apakah menuProduk sedang tidak tampil
            Component parentComponent = null; // Replace with the actual component reference
            isianPelanggan.setLocationRelativeTo(parentComponent);
            isianPelanggan.refreshFormIsian();
            isianPelanggan.setParentisianPelanggan(this);
            isianPelanggan.setVisible(true);
        }
        else {
            isianPelanggan.requestFocusInWindow();
            isianPelanggan.setFocusable(true);
            JOptionPane.showMessageDialog(this, "Form Tambah Pelanggan Sudah Terbuka, Silahkan Lengkapi data dahulu.");
        }
    }//GEN-LAST:event_btnTambahPelangganActionPerformed

    private void btnUbahPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahPelangganActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = pelangganGridTable.getSelectedRow();

        if (selectedRowIndex == -1) {
            // No row is selected, show a message
            JOptionPane.showMessageDialog(this, "Tidak Ada Data Yang Dipilih, Mohon Cek Kembali.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            setFormUpdateMasterPelanggan();
        }
    }//GEN-LAST:event_btnUbahPelangganActionPerformed

    private void btnCetakPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakPelangganActionPerformed
        try {
            Connection konn = new Koneksi().koneksiDB();
            File file = new File("src/_cetak/laporanPelanggan.jrxml");
            JasDes = JRXmlLoader.load(file);
            param.put("pelanggan_id",btnCetakPelanggan.getText());
            JasRep = JasperCompileManager.compileReport(JasDes);
            JasPri = JasperFillManager.fillReport(JasRep, param, konn);
            //JasperViewer.viewReport(JasPri, false);
            JasperViewer jasperViewer = new JasperViewer(JasPri, false);
            jasperViewer.setExtendedState(jasperViewer.getExtendedState()|javax.swing.JFrame.MAXIMIZED_BOTH);
            jasperViewer.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal membuka Laporan", "Cetak laporan", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCetakPelangganActionPerformed

    public void setFormUpdateMasterPelanggan(){
        int selectedRowIndex = pelangganGridTable.getSelectedRow();
         
        // A row is selected, retrieve data and perform the update
        String pelanggan_id = (String) pelangganGridTable.getValueAt(selectedRowIndex, 0);
        String pelanggan_nama = (String) pelangganGridTable.getValueAt(selectedRowIndex, 1);
        String pelanggan_alamat = (String) pelangganGridTable.getValueAt(selectedRowIndex, 2);
        String pelanggan_tlp = (String) pelangganGridTable.getValueAt(selectedRowIndex, 3);
        String pelanggan_jenis_kelamin = (String) pelangganGridTable.getValueAt(selectedRowIndex, 4);
        String pelanggan_status = (String) pelangganGridTable.getValueAt(selectedRowIndex, 5);
        
        Component parentComponent = null; // Replace with the actual component reference
        
        isianPelanggan.setLocationRelativeTo(parentComponent);
        isianPelanggan.setDataUpdateFormIsianPelanggan(pelanggan_id, pelanggan_nama, pelanggan_alamat, pelanggan_tlp, pelanggan_jenis_kelamin, pelanggan_status);
        isianPelanggan.setParentisianPelanggan(this);
        isianPelanggan.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetakPelanggan;
    private javax.swing.JButton btnRefreshPelanggan;
    private javax.swing.JButton btnTambahPelanggan;
    private javax.swing.JButton btnUbahPelanggan;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelPelanggan;
    private javax.swing.JTextField pelangganCariField;
    private javax.swing.JTable pelangganGridTable;
    private javax.swing.JComboBox<String> pelangganPilihanField;
    // End of variables declaration//GEN-END:variables

   
}
